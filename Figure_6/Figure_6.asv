clear all
%close all


%load trajectories from infared parameters (Figure 2)
load('../Figure_2/Trajs.mat')

Pick=[2,5,1]; % we chose 3 trajectories that were best for plot

%load the details of the inference preformed on these trajectories
for j=1:length(Pick)
temp=load(['DitsTraj_',num2str(Pick(j)),'b.mat']);
temp.Dits.TTraj=Trajs.Pos(:,j); %the trajectory that was used
Dits(j)=temp.Dits;
end
clear temp j

num_times=Dits(1).num_times;
day0=Dits(1).day0;
realTraj=Dits.realTraj;

%colors and shapes for figure
colors={'#0072BD','#D95319','#77AC30', '#A2142F', '#7E2F8E'}; %(blue, orange, grean, red, purple)
colors2={[26,110,220],[220,149,27],[49,196,88],[158,93,145]};
shapes=['o','d','^','h'];

%==========================================================================
%compute likelihood of each trajectory to result from each infer pars
%load the trajectories made using infered parameters
load('Scan_Infs.mat')

LikeTable=zeros(10);
LikeReal=zeros(10);
for j=1:10
    for k=1:10
    Pos=Scan.Pos{j}; % all trajectories made by using Theta_j
    mu=mean(Pos,2); %mean
    sig=std(Pos')'; %standard deviation
    straj=Scan.synt_traj{k}; %Trajectory_k used to infere Theta_k

    %Pr(Traj_k|Theta_j)
    like=(straj-mu+0.5)./(sig)./sqrt(2);
    like=-0.5*(erfc(like)-erfc(like-1./(sig)./sqrt(2)));
    like=sum(log(like));
    LikeTable(j,k)=like;
    
    %Pr(Traj_real|Theta_j)
    like=(realTraj-mu+0.5)./(sig)./sqrt(2);
    like=-0.5*(erfc(like)-erfc(like-1./(sig)./sqrt(2)));
    like=sum(log(like));
    LikeReal(j)=like;
    
    end
end
%==========================================================================

figure(6)
tiledlayout(2,2)

%--------------------------------------------------------------------------
%panel A - trajectories used for inference
nexttile([1,2])
hold on

t=(1:num_times)*Dits(1).tmstep+day0;

%plot trajectory from data
plot(t,Dits(1).realTraj,'k',LineWidth=2); 
%plot trajectories used for inference
for j=1:length(Pick)
    plot(t,Dits(j).TTraj,Color=colors{j},LineWidth=2);
end

xlabel('date'); ylabel('MRSA positives')
set(gca,'FontSize',17,'FontName','Times New Roman' )

%placing the panels' letters (it's a crude way but it works) 
x=min(t)-(max(t)-min(t))*0.125; x.Format=t.Format;
text(x,42,'A.','FontSize',17,'FontName','Times New Roman'); 

text(x,-14,'B.','FontSize',17,'FontName','Times New Roman'); 

x=min(t)+(max(t)-min(t))*0.49; x.Format=t.Format;
text(x,-14,'C.','FontSize',17,'FontName','Times New Roman'); 
%--------------------------------------------------------------------------
%Panel B - posterior distributions of inferences
nexttile
hold on

%plot scatter of posterior
for j=1:3
y=Dits(j).Bs(:,end); x=Dits(j).Gs(:,end);
fig=scatter(x,y,'MarkerFaceColor',colors{j},'MarkerEdgeColor','k');
fig.MarkerFaceAlpha=0.3;
fig.MarkerEdgeAlpha=0.1;
end

%plot marker for mean of the distribution
for j=1:3
    y=Dits(j).Bs(:,end); x=Dits(j).Gs(:,end);
    plot(mean(x),mean(y),[shapes(j),'k'],'MarkerSize',8,'LineWidth',2,MarkerFaceColor=colors{j})
end
plot(Trajs.Vars.Gamma,Trajs.Vars.Beta,[shapes(4),'k'],'MarkerSize',15,'LineWidth',2)

xlabel('\gamma');ylabel('\beta');
legend('','','','T_1','T_2','T_3','data')
set(gca,'FontSize',17,'FontName','Times New Roman' )

%--------------------------------------------------------------------------
%Panel C - statistics of the likelihoods 
nexttile 
hold on

for j=1:length(Pick)
    Ind=Pick(j);
    Scn=Scan(Ind,:);
    %plot error bars for distribution of likelihood 
    errorbar(j,Scn.like_med,Scn.like_med-Scn.like05,Scn.like95-Scn.like_med...
        ,LineWidth=3,Color=colors{j});
    %plot 
    plot(j,LikeReal(Ind),shapes(4),MarkerSize=7,Color='k',LineWidth=3);

    for k=1:length(Pick)

    plot(j,LikeTable(Pick(j),Pick(k)),shapes(k),MarkerSize=7,Color=colors{k})
    plot(j,LikeTable(Pick(j),Pick(k)),shapes(k),MarkerSize=7,Color=colors{k},LineWidth=3)
    end
end
xlabel('\theta_j'); ylabel('log(P(T_i|\theta_j))');
set(gca,'FontSize',17,'FontName','Times New Roman' )
legend('','data','','T_1','','T_2','','T_3')
hold off

Gmax=max(Scan(Pick,:).Gamma); Gmin=min(Scan(Pick,:).Gamma);
xlim([0.5,3.5]); xticks([1,2,3])
set(gcf,'position',[-1500*0,100*0,1200,700])
